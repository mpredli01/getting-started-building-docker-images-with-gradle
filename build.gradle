import com.bmuschko.gradle.docker.tasks.DockerInfo
import com.bmuschko.gradle.docker.tasks.DockerVersion
import com.bmuschko.gradle.docker.tasks.DockerOperation

import com.bmuschko.gradle.docker.tasks.container.DockerCreateContainer
import com.bmuschko.gradle.docker.tasks.container.DockerExecContainer
import com.bmuschko.gradle.docker.tasks.container.DockerStartContainer
import com.bmuschko.gradle.docker.tasks.container.DockerStopContainer

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerListImages

plugins {
    id 'java'
    id 'application'
    id 'java-gradle-plugin'
    id 'com.bmuschko.docker-java-application' version '9.1.0'
    id 'com.bmuschko.docker-remote-api' version '9.1.0'
    }

repositories {
    mavenCentral()
    gradlePluginPortal()
    }

dependencies {
    implementation group: 'com.bmuschko', name: 'gradle-docker-plugin', version: '6.7.0'
    implementation group: 'com.bmuschko', name: 'asciidoctorj-tabbed-code-extension', version: '0.3'
    implementation(buildsrclibs.asciidoctor.jvm.plugin)
    runtimeOnly(buildsrclibs.asciidoctorj.tabbed.code.extension)
    }

task createMyAppDockerfile(type: Dockerfile) {
    instruction('FROM openjdk:11.0.15-jre-slim')
    instruction('LABEL maintainer=\"Michael Redlich\"')
    instruction('WORKDIR /app2')
    instruction('ENTRYPOINT ["java", "-Xms256m", "-Xmx2048m", "-cp", "/app2/resources:/muDockerApp/classes:/app2/libs/*", "org.gradle.MainApp"]')
    instruction('EXPOSE 9090 5701')
    instruction('RUN ls -la')
    environmentVariable('JAVA_OPTS', '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap')
    instructionsFromTemplate(file('Dockerfile.tmpl'))
    }

task buildMyAppImage(type: DockerBuildImage) {
    dependsOn(createMyAppDockerfile)
    inputDir.set(file('build/docker'))
    images.add('test/app2:latest')
    }

task createMyAppContainer(type: DockerCreateContainer) {
    dependsOn(buildMyAppImage)
    targetImageId(buildMyAppImage.getImageId())
    }

task startMyAppContainer(type: DockerStartContainer) {
    dependsOn(createMyAppContainer)
    targetContainerId(createMyAppContainer.getContainerId())
    }

task stopMyAppContainer(type: DockerStopContainer) {
    targetContainerId(createMyAppContainer.getContainerId())
    }

task executeMyAppContainer(type: DockerExecContainer) {
    targetContainerId(createMyAppContainer.getContainerId())
    }

task getMyDockerInfo(type: DockerInfo) {
    }

task getMyDockerVersion(type: DockerVersion) {
    }

task getMyDockerImageList(type: DockerListImages) {
    }

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.bmuschko.docker-java-application'
apply plugin: 'com.bmuschko.docker-remote-api'

application {
    mainClass.set('org.gradle.MainApp')
    }
